{"version":3,"sources":["components/Random_V1.jsx","components/Tag_V1.jsx","App.js","index.js"],"names":["Random","useState","gif","setGif","fetchGif","a","url","process","axios","get","data","imageSrc","images","downsized_large","useEffect","className","width","src","alt","onClick","tag","setTag","value","onChange","e","target","App","ReactDOM","render","document","getElementById"],"mappings":"sNAmCeA,EA9BA,WACX,MAAsBC,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KAEMC,EAAQ,uCAAG,kCAAAC,EAAA,6DACPC,EADO,uDALLC,oCAKK,SAGUC,IAAMC,IAAIH,GAHpB,gBAGLI,EAHK,EAGLA,KAEFC,EAAWD,EAAKA,KAAKE,OAAOC,gBAAgBP,IAElDH,EAAOQ,GAPM,2CAAH,qDAUdG,qBAAU,WACNV,MACD,IAMH,OACI,sBAAKW,UAAU,YAAf,UACI,4CACA,qBAAKC,MAAM,MAAMC,IAAKf,EAAKgB,IAAI,eAC/B,wBAAQC,QARI,WAChBf,KAOI,+BCOGJ,EAhCA,WACX,MAAsBC,mBAAS,QAA/B,mBAAOmB,EAAP,KAAYC,EAAZ,KACA,EAAsBpB,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KAEMC,EAAQ,uCAAG,WAAOgB,GAAP,qBAAAf,EAAA,6DACPC,EADO,uDANLC,mCAMK,gBAC8Da,GAD9D,SAGUZ,IAAMC,IAAIH,GAHpB,gBAGLI,EAHK,EAGLA,KAEFC,EAAWD,EAAKA,KAAKE,OAAOC,gBAAgBP,IAElDH,EAAOQ,GAPM,2CAAH,sDAUdG,qBAAU,WACNV,EAASgB,KACV,CAACA,IAMJ,OACI,sBAAKL,UAAU,YAAf,UACI,yCAAYK,EAAZ,UACA,qBAAKJ,MAAM,MAAMC,IAAKf,EAAKgB,IAAI,eAC/B,uBAAOI,MAAOF,EAAKG,SAAU,SAACC,GAAD,OAAOH,EAAOG,EAAEC,OAAOH,UACpD,wBAAQH,QATI,WAChBf,EAASgB,IAQL,+BCZGM,G,MAbH,kBAER,gCACA,6CACA,sBAAKX,UAAU,iBAAf,UACQ,cAAC,EAAD,IACA,cAAC,EAAD,YCPZY,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.d7162f7b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nconst Random = () => {\r\n    const [gif, setGif] = useState('');\r\n\r\n    const fetchGif = async () => {\r\n        const url = `https://api.giphy.com/v1/gifs/random?api_key=${API_KEY}`;\r\n\r\n        const { data } = await axios.get(url);\r\n\r\n        const imageSrc = data.data.images.downsized_large.url;\r\n\r\n        setGif(imageSrc);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchGif();\r\n    }, []);\r\n\r\n    const handleClick = () => {\r\n        fetchGif();\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Random Gif</h1>\r\n            <img width=\"500\" src={gif} alt=\"Random Gif\" />\r\n            <button onClick={handleClick}>CLICK FOR NEW</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Random;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nconst Random = () => {\r\n    const [tag, setTag] = useState('dogs');\r\n    const [gif, setGif] = useState('');\r\n\r\n    const fetchGif = async (tag) => {\r\n        const url = `https://api.giphy.com/v1/gifs/random?api_key=${API_KEY}&tag=${tag}`;\r\n\r\n        const { data } = await axios.get(url);\r\n\r\n        const imageSrc = data.data.images.downsized_large.url;\r\n\r\n        setGif(imageSrc);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchGif(tag);\r\n    }, [tag]);\r\n\r\n    const handleClick = () => {\r\n        fetchGif(tag);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Random {tag} Gif</h1>\r\n            <img width=\"500\" src={gif} alt=\"Random Gif\" />\r\n            <input value={tag} onChange={(e) => setTag(e.target.value)} />\r\n            <button onClick={handleClick}>CLICK FOR NEW</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Random;","//import logo from './logo.svg';\nimport React from 'react';\n\nimport Random from './components/Random_V1';\nimport Tag from './components/Tag_V1';\nimport './App.css';\n\nconst App = () => (\n \n    <div>\n    <h1>Random GIFs</h1>\n    <div className=\"main-container\">\n            <Random />\n            <Tag />\n        </div>\n\n    </div>\n  \n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}